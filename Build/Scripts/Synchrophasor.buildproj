<?xml version="1.0" encoding="utf-8"?>

<!--
*******************************************************************************************************
**  Synchrophasor.buildproj - Gbtc
**
**  Tennessee Valley Authority, 2009
**  No copyright is claimed pursuant to 17 USC ยง 105.  All Other Rights Reserved.
**
**  This software is made freely available under the TVA Open Source Agreement (see below).
**
**  Code Modification History:
**  ===================================================================================================
**  10/05/2009 - Pinal C. Patel
**       Generated original version of source code.
**  10/10/2009 - Pinal C. Patel
**       Modified to accommodate the change in file versioning and building of install packages.
**  10/13/2009 - Pinal C. Patel
**       Made building of help docs optional using SkipHelpFiles property.
**  10/15/2009 - Pinal C. Patel
**       Enabled unit testing.
**  10/19/2009 - Pinal C. Patel
**       Enabled archiving of binaries and installs.
**  10/20/2009 - Pinal C. Patel
**       Made deployment of archives to public locations switchable.
**  12/23/2009 - Pinal C. Patel
**       Updated to exclude openPDCManager projects from versioning.
**  04/27/2010 - Pinal C. Patel
**       Moved initialization of version and project files to after the build has been initialized
**       so that they don't include files that have to deleted of moved since the last build.
**  04/28/2010 - Pinal C. Patel
**       Modified the build to output a set of signed class libraries by leveraging the newly added
**       ProjectsToBuild.Properties property.
**       Made building of strong-named class libraries optional using SkipSigning property.
**  10/09/2010 - Pinal C. Patel
**       Modified BeforeBuildProjects target to compile 32-bit install package of openPDC.
**       Overwrote BeforeCleanBuild target to exclude main setup application from the list of build
**       output files to be deleted.
**       Enabled versioning of setup projects.
**  10/23/2010 - Pinal C. Patel
**       Excluded openPDCManager Data project from versioning.
**  11/14/2010 - Pinal C. Patel
**       Added openPDCManager installer projects to the list of installs to build and added the output
**       of openPDCManager setup projects to the list of files to be deleted prior to deployment.
**
*******************************************************************************************************
-->

<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="..\..\..\..\Contributor Resources\Tools\Build Tools\Master Build\MasterBuild.buildproj"/>

  <Target Name="BeforePrepareSettings">
    <PropertyGroup>
      <!-- Must-override setting(s). -->
      <ProjectName>Synchrophasor</ProjectName>
      <!-- Server folder is different for VS2012 -->
      <ServerFolder>$/openpdc/$(ProjectName)/Current Version-VS2012</ServerFolder>
      <!-- Use Visual Studio 11.0 common tools -->
      <TfsClient Condition="'$(TfsClient)' == ''">$(VS110COMNTOOLS)\..\IDE\tf.exe</TfsClient>
      <VisualStudio Condition="'$(VisualStudio)' == ''">$(VS110COMNTOOLS)\..\IDE\devenv.com</VisualStudio>
      <MSTest Condition="'$(MSTest)' == ''">$(VS110COMNTOOLS)\..\IDE\mstest.exe</MSTest>
    </PropertyGroup>
  </Target>

  <Target Name="AfterPrepareSettings">
    <PropertyGroup>
      <!-- Project specific settings. -->
      <ProjectSolution>$(LocalFolder)\Source\$(ProjectName).sln</ProjectSolution>
      <BuildDeployFolder Condition="'$(BuildDeployFolder)' == ''">\\GPAWEB\NightlyBuilds\openPDC\Beta-VS2012\</BuildDeployFolder>
      
      <SourceArchiveFileName Condition="'$(SourceArchiveFileName)' == ''">$(LocalFolder)\Source.zip</SourceArchiveFileName>
      <SourceArchiveWorkingDirectory Condition="'$(SourceArchiveWorkingDirectory)' == ''">$(LocalFolder)\Archives\Source</SourceArchiveWorkingDirectory>
    </PropertyGroup>
  </Target>

  <Target Name="BeforeVersionSource">
    <ItemGroup>
      <!-- List of files to be versioned. -->
      <FilesToVersion Include="$(LocalFolder)\Source\**\AssemblyInfo.*" Exclude="$(LocalFolder)\Source\Applications\openPDCManager\Web.Data\Properties\AssemblyInfo.*">
        <VersionRegex>(?'BeforeVersion'AssemblyVersion\(%22)(?'CoreVersion'(\*|\d+)\.)+(\*|\d+)(?'AfterVersion'%22\))</VersionRegex>
        <VersionPrecision>4</VersionPrecision>
      </FilesToVersion>
      <FilesToVersion Include="$(LocalFolder)\Source\**\AssemblyInfo.*" Exclude="$(LocalFolder)\Source\Applications\openPDCManager\Web.Data\Properties\AssemblyInfo.*">
        <VersionRegex>(?'BeforeVersion'AssemblyFileVersion\(%22)(?'CoreVersion'(\*|\d+)\.)+(\*|\d+)(?'AfterVersion'%22\))</VersionRegex>
        <VersionPrecision>4</VersionPrecision>
      </FilesToVersion>
    </ItemGroup>
  </Target>

  <Target Name="BeforeBuildProjects">
    <ItemGroup>
      <!-- List of projects to build. -->
      <ProjectsToBuild Include="$(ProjectSolution)"/>
      <ProjectsToBuild Include="$(LocalFolder)\Build\Scripts\$(ProjectName).shfbproj" Condition="'$(SkipHelpFiles)' == ''"/>
      <!-- List of installs to build. -->
      <InstallsToBuild Include="$(LocalFolder)\Source\**\*.wixproj" />
    </ItemGroup>
  </Target>

  <Target Name="BeforeExecuteUnitTests">
    <ItemGroup>
      <!-- List of unit test assemblies. -->
      <UnitTestAssemblies Include="$(BuildOutputFolder)\**\*.Test.dll"/>
    </ItemGroup>
  </Target>

  <Target Name="AfterExecuteUnitTests">
    <!-- Clean-up after all unit tests have been executed and passed. -->
    <RemoveDir Directories="%(UnitTestAssemblies.RootDir)%(UnitTestAssemblies.Directory)" Condition="Exists('%(UnitTestAssemblies.RootDir)%(UnitTestAssemblies.Directory)')"/>
  </Target>

  <Target Name="AfterDeployBuild" Condition="'$(ForceBuild)' == 'true' And '$(BuildDeployFolder)' != ''">
    <ItemGroup>
      <!--List of source code files to archive.-->
      <SourcesToArchive Include="$(LocalFolder)\Source\**\*.*" Exclude="$(LocalFolder)\Source\**\obj\**\*.*"/>
    </ItemGroup>
    
    <!-- Create archive of source tree. -->
    <Message Text="Archiving source code..."/>
    <Copy SourceFiles="@(SourcesToArchive)" DestinationFolder="$(SourceArchiveWorkingDirectory)\%(SourcesToArchive.RecursiveDir)"/>
    <ItemGroup>
      <SourcesToArchive Remove="@(SourcesToArchive)"/>
      <SourcesToArchive Include="$(SourceArchiveWorkingDirectory)\**\*.*"/>
    </ItemGroup>
    <MSBuild.Community.Tasks.Zip Files="@(SourcesToArchive)" ZipFileName="$(SourceArchiveFileName)" WorkingDirectory="$(SourceArchiveWorkingDirectory)" Condition="'@(SourcesToArchive)' != ''"/>
    <ItemGroup>
      <SourceArchive Include="$(SourceArchiveFileName)"/>
      <SourceArchiveDestination Include="$(BuildDeployFolder)\..\"/>
    </ItemGroup>
    <Copy SourceFiles="@(SourceArchive)" DestinationFolder="%(SourceArchiveDestination.FullPath)" ContinueOnError="true"/>
  </Target>
  
  <Target Name="BeforeCleanBuild">
    <ItemGroup>
      <!-- Exclude the main setup application from the list of build output files to be deleted. -->
      <FilesToDelete Remove="$(BuildOutputFolder)\Setup\Setup.exe"/>
      <!-- FilesToDelete Include="$(BuildOutputFolder)\Setup\Installers\openPDCManagerWebSetup.*"/ -->
      <!-- FilesToDelete Include="$(BuildOutputFolder)\Setup\Installers\openPDCManagerServicesSetup.*"/ -->
    </ItemGroup>
  </Target>
  
  <Target Name="BeforeDeployBuild">
    <ItemGroup>
      <!-- List of binaries to archive. -->
      <BinariesToArchive Include="$(BuildOutputFolder)\**\*.*"/>
      <!-- List of installs to archive. -->
      <InstallsToArchive Include="$(BuildOutputFolder)\Setup\**\*.*"/>
      <!-- Destinations of archive files (*.zip). -->
      <ArchiveDestinations Include="$(BuildDeployFolder)"/>
    </ItemGroup>
  </Target>

</Project>