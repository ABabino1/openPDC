//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace openPDCManager.Silverlight.PhasorDataServiceProxy {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Node", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Node : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<int> CompanyIDField;
        
        private string CompanyNameField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private System.Guid IDField;
        
        private string ImageField;
        
        private System.Nullable<decimal> LatitudeField;
        
        private int LoadOrderField;
        
        private System.Nullable<decimal> LongitudeField;
        
        private bool MasterField;
        
        private string NameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadOrder {
            get {
                return this.LoadOrderField;
            }
            set {
                if ((this.LoadOrderField.Equals(value) != true)) {
                    this.LoadOrderField = value;
                    this.RaisePropertyChanged("LoadOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Master {
            get {
                return this.MasterField;
            }
            set {
                if ((this.MasterField.Equals(value) != true)) {
                    this.MasterField = value;
                    this.RaisePropertyChanged("Master");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Company", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Company : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private int IDField;
        
        private int LoadOrderField;
        
        private string MapAcronymField;
        
        private string NameField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadOrder {
            get {
                return this.LoadOrderField;
            }
            set {
                if ((this.LoadOrderField.Equals(value) != true)) {
                    this.LoadOrderField = value;
                    this.RaisePropertyChanged("LoadOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MapAcronym {
            get {
                return this.MapAcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.MapAcronymField, value) != true)) {
                    this.MapAcronymField = value;
                    this.RaisePropertyChanged("MapAcronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Historian", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Historian : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private string AssemblyNameField;
        
        private string ConnectionStringField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private int IDField;
        
        private bool IsLocalField;
        
        private int LoadOrderField;
        
        private string NameField;
        
        private System.Guid NodeIDField;
        
        private string NodeNameField;
        
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLocal {
            get {
                return this.IsLocalField;
            }
            set {
                if ((this.IsLocalField.Equals(value) != true)) {
                    this.IsLocalField = value;
                    this.RaisePropertyChanged("IsLocal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LoadOrder {
            get {
                return this.LoadOrderField;
            }
            set {
                if ((this.LoadOrderField.Equals(value) != true)) {
                    this.LoadOrderField = value;
                    this.RaisePropertyChanged("LoadOrder");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid NodeID {
            get {
                return this.NodeIDField;
            }
            set {
                if ((this.NodeIDField.Equals(value) != true)) {
                    this.NodeIDField = value;
                    this.RaisePropertyChanged("NodeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NodeName {
            get {
                return this.NodeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.NodeNameField, value) != true)) {
                    this.NodeNameField = value;
                    this.RaisePropertyChanged("NodeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vendor", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Vendor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private string ContactEmailField;
        
        private int IDField;
        
        private string NameField;
        
        private string PhoneNumberField;
        
        private string URLField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ContactEmail {
            get {
                return this.ContactEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactEmailField, value) != true)) {
                    this.ContactEmailField = value;
                    this.RaisePropertyChanged("ContactEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VendorDevice", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class VendorDevice : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int IDField;
        
        private string NameField;
        
        private string URLField;
        
        private int VendorIDField;
        
        private string VendorNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URL {
            get {
                return this.URLField;
            }
            set {
                if ((object.ReferenceEquals(this.URLField, value) != true)) {
                    this.URLField = value;
                    this.RaisePropertyChanged("URL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorID {
            get {
                return this.VendorIDField;
            }
            set {
                if ((this.VendorIDField.Equals(value) != true)) {
                    this.VendorIDField = value;
                    this.RaisePropertyChanged("VendorID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorName {
            get {
                return this.VendorNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorNameField, value) != true)) {
                    this.VendorNameField = value;
                    this.RaisePropertyChanged("VendorName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhasorDataServiceProxy.IPhasorDataService")]
    public interface IPhasorDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetNodeList", ReplyAction="http://tempuri.org/IPhasorDataService/GetNodeListResponse")]
        System.IAsyncResult BeginGetNodeList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> EndGetNodeList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetNodes", ReplyAction="http://tempuri.org/IPhasorDataService/GetNodesResponse")]
        System.IAsyncResult BeginGetNodes(bool ActiveOnly, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<System.Guid, string> EndGetNodes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/SaveNode", ReplyAction="http://tempuri.org/IPhasorDataService/SaveNodeResponse")]
        System.IAsyncResult BeginSaveNode(openPDCManager.Silverlight.PhasorDataServiceProxy.Node node, bool isNew, System.AsyncCallback callback, object asyncState);
        
        string EndSaveNode(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetCompanyList", ReplyAction="http://tempuri.org/IPhasorDataService/GetCompanyListResponse")]
        System.IAsyncResult BeginGetCompanyList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> EndGetCompanyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetCompanies", ReplyAction="http://tempuri.org/IPhasorDataService/GetCompaniesResponse")]
        System.IAsyncResult BeginGetCompanies(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetCompanies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/SaveCompany", ReplyAction="http://tempuri.org/IPhasorDataService/SaveCompanyResponse")]
        System.IAsyncResult BeginSaveCompany(openPDCManager.Silverlight.PhasorDataServiceProxy.Company company, bool isNew, System.AsyncCallback callback, object asyncState);
        
        string EndSaveCompany(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetHistorianList", ReplyAction="http://tempuri.org/IPhasorDataService/GetHistorianListResponse")]
        System.IAsyncResult BeginGetHistorianList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> EndGetHistorianList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetVendorList", ReplyAction="http://tempuri.org/IPhasorDataService/GetVendorListResponse")]
        System.IAsyncResult BeginGetVendorList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> EndGetVendorList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetVendors", ReplyAction="http://tempuri.org/IPhasorDataService/GetVendorsResponse")]
        System.IAsyncResult BeginGetVendors(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetVendors(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/SaveVendor", ReplyAction="http://tempuri.org/IPhasorDataService/SaveVendorResponse")]
        System.IAsyncResult BeginSaveVendor(openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor, bool isNew, System.AsyncCallback callback, object asyncState);
        
        string EndSaveVendor(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetVendorDeviceList", ReplyAction="http://tempuri.org/IPhasorDataService/GetVendorDeviceListResponse")]
        System.IAsyncResult BeginGetVendorDeviceList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> EndGetVendorDeviceList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/SaveVendorDevice", ReplyAction="http://tempuri.org/IPhasorDataService/SaveVendorDeviceResponse")]
        System.IAsyncResult BeginSaveVendorDevice(openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice, bool isNew, System.AsyncCallback callback, object asyncState);
        
        string EndSaveVendorDevice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IPhasorDataServiceChannel : openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetNodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetNodesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetNodesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<System.Guid, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<System.Guid, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaveNodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveNodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCompaniesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompaniesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaveCompanyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveCompanyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetHistorianListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHistorianListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetVendorsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVendorsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaveVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetVendorDeviceListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVendorDeviceListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class SaveVendorDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SaveVendorDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PhasorDataServiceClient : System.ServiceModel.ClientBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService>, openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService {
        
        private BeginOperationDelegate onBeginGetNodeListDelegate;
        
        private EndOperationDelegate onEndGetNodeListDelegate;
        
        private System.Threading.SendOrPostCallback onGetNodeListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetNodesDelegate;
        
        private EndOperationDelegate onEndGetNodesDelegate;
        
        private System.Threading.SendOrPostCallback onGetNodesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveNodeDelegate;
        
        private EndOperationDelegate onEndSaveNodeDelegate;
        
        private System.Threading.SendOrPostCallback onSaveNodeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompanyListDelegate;
        
        private EndOperationDelegate onEndGetCompanyListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompaniesDelegate;
        
        private EndOperationDelegate onEndGetCompaniesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompaniesCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveCompanyDelegate;
        
        private EndOperationDelegate onEndSaveCompanyDelegate;
        
        private System.Threading.SendOrPostCallback onSaveCompanyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHistorianListDelegate;
        
        private EndOperationDelegate onEndGetHistorianListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHistorianListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVendorListDelegate;
        
        private EndOperationDelegate onEndGetVendorListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVendorListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVendorsDelegate;
        
        private EndOperationDelegate onEndGetVendorsDelegate;
        
        private System.Threading.SendOrPostCallback onGetVendorsCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveVendorDelegate;
        
        private EndOperationDelegate onEndSaveVendorDelegate;
        
        private System.Threading.SendOrPostCallback onSaveVendorCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVendorDeviceListDelegate;
        
        private EndOperationDelegate onEndGetVendorDeviceListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVendorDeviceListCompletedDelegate;
        
        private BeginOperationDelegate onBeginSaveVendorDeviceDelegate;
        
        private EndOperationDelegate onEndSaveVendorDeviceDelegate;
        
        private System.Threading.SendOrPostCallback onSaveVendorDeviceCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhasorDataServiceClient() {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhasorDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetNodeListCompletedEventArgs> GetNodeListCompleted;
        
        public event System.EventHandler<GetNodesCompletedEventArgs> GetNodesCompleted;
        
        public event System.EventHandler<SaveNodeCompletedEventArgs> SaveNodeCompleted;
        
        public event System.EventHandler<GetCompanyListCompletedEventArgs> GetCompanyListCompleted;
        
        public event System.EventHandler<GetCompaniesCompletedEventArgs> GetCompaniesCompleted;
        
        public event System.EventHandler<SaveCompanyCompletedEventArgs> SaveCompanyCompleted;
        
        public event System.EventHandler<GetHistorianListCompletedEventArgs> GetHistorianListCompleted;
        
        public event System.EventHandler<GetVendorListCompletedEventArgs> GetVendorListCompleted;
        
        public event System.EventHandler<GetVendorsCompletedEventArgs> GetVendorsCompleted;
        
        public event System.EventHandler<SaveVendorCompletedEventArgs> SaveVendorCompleted;
        
        public event System.EventHandler<GetVendorDeviceListCompletedEventArgs> GetVendorDeviceListCompleted;
        
        public event System.EventHandler<SaveVendorDeviceCompletedEventArgs> SaveVendorDeviceCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetNodeList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNodeList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetNodeList(System.IAsyncResult result) {
            return base.Channel.EndGetNodeList(result);
        }
        
        private System.IAsyncResult OnBeginGetNodeList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetNodeList(callback, asyncState);
        }
        
        private object[] OnEndGetNodeList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetNodeList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNodeListCompleted(object state) {
            if ((this.GetNodeListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNodeListCompleted(this, new GetNodeListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNodeListAsync() {
            this.GetNodeListAsync(null);
        }
        
        public void GetNodeListAsync(object userState) {
            if ((this.onBeginGetNodeListDelegate == null)) {
                this.onBeginGetNodeListDelegate = new BeginOperationDelegate(this.OnBeginGetNodeList);
            }
            if ((this.onEndGetNodeListDelegate == null)) {
                this.onEndGetNodeListDelegate = new EndOperationDelegate(this.OnEndGetNodeList);
            }
            if ((this.onGetNodeListCompletedDelegate == null)) {
                this.onGetNodeListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNodeListCompleted);
            }
            base.InvokeAsync(this.onBeginGetNodeListDelegate, null, this.onEndGetNodeListDelegate, this.onGetNodeListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetNodes(bool ActiveOnly, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetNodes(ActiveOnly, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<System.Guid, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetNodes(System.IAsyncResult result) {
            return base.Channel.EndGetNodes(result);
        }
        
        private System.IAsyncResult OnBeginGetNodes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            bool ActiveOnly = ((bool)(inValues[0]));
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetNodes(ActiveOnly, callback, asyncState);
        }
        
        private object[] OnEndGetNodes(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<System.Guid, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetNodes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetNodesCompleted(object state) {
            if ((this.GetNodesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetNodesCompleted(this, new GetNodesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetNodesAsync(bool ActiveOnly) {
            this.GetNodesAsync(ActiveOnly, null);
        }
        
        public void GetNodesAsync(bool ActiveOnly, object userState) {
            if ((this.onBeginGetNodesDelegate == null)) {
                this.onBeginGetNodesDelegate = new BeginOperationDelegate(this.OnBeginGetNodes);
            }
            if ((this.onEndGetNodesDelegate == null)) {
                this.onEndGetNodesDelegate = new EndOperationDelegate(this.OnEndGetNodes);
            }
            if ((this.onGetNodesCompletedDelegate == null)) {
                this.onGetNodesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetNodesCompleted);
            }
            base.InvokeAsync(this.onBeginGetNodesDelegate, new object[] {
                        ActiveOnly}, this.onEndGetNodesDelegate, this.onGetNodesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginSaveNode(openPDCManager.Silverlight.PhasorDataServiceProxy.Node node, bool isNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveNode(node, isNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndSaveNode(System.IAsyncResult result) {
            return base.Channel.EndSaveNode(result);
        }
        
        private System.IAsyncResult OnBeginSaveNode(object[] inValues, System.AsyncCallback callback, object asyncState) {
            openPDCManager.Silverlight.PhasorDataServiceProxy.Node node = ((openPDCManager.Silverlight.PhasorDataServiceProxy.Node)(inValues[0]));
            bool isNew = ((bool)(inValues[1]));
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginSaveNode(node, isNew, callback, asyncState);
        }
        
        private object[] OnEndSaveNode(System.IAsyncResult result) {
            string retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndSaveNode(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveNodeCompleted(object state) {
            if ((this.SaveNodeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveNodeCompleted(this, new SaveNodeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveNodeAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Node node, bool isNew) {
            this.SaveNodeAsync(node, isNew, null);
        }
        
        public void SaveNodeAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Node node, bool isNew, object userState) {
            if ((this.onBeginSaveNodeDelegate == null)) {
                this.onBeginSaveNodeDelegate = new BeginOperationDelegate(this.OnBeginSaveNode);
            }
            if ((this.onEndSaveNodeDelegate == null)) {
                this.onEndSaveNodeDelegate = new EndOperationDelegate(this.OnEndSaveNode);
            }
            if ((this.onSaveNodeCompletedDelegate == null)) {
                this.onSaveNodeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveNodeCompleted);
            }
            base.InvokeAsync(this.onBeginSaveNodeDelegate, new object[] {
                        node,
                        isNew}, this.onEndSaveNodeDelegate, this.onSaveNodeCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetCompanyList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanyList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetCompanyList(System.IAsyncResult result) {
            return base.Channel.EndGetCompanyList(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetCompanyList(callback, asyncState);
        }
        
        private object[] OnEndGetCompanyList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetCompanyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyListCompleted(object state) {
            if ((this.GetCompanyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyListCompleted(this, new GetCompanyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyListAsync() {
            this.GetCompanyListAsync(null);
        }
        
        public void GetCompanyListAsync(object userState) {
            if ((this.onBeginGetCompanyListDelegate == null)) {
                this.onBeginGetCompanyListDelegate = new BeginOperationDelegate(this.OnBeginGetCompanyList);
            }
            if ((this.onEndGetCompanyListDelegate == null)) {
                this.onEndGetCompanyListDelegate = new EndOperationDelegate(this.OnEndGetCompanyList);
            }
            if ((this.onGetCompanyListCompletedDelegate == null)) {
                this.onGetCompanyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyListDelegate, null, this.onEndGetCompanyListDelegate, this.onGetCompanyListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetCompanies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetCompanies(System.IAsyncResult result) {
            return base.Channel.EndGetCompanies(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetCompanies(callback, asyncState);
        }
        
        private object[] OnEndGetCompanies(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetCompanies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompaniesCompleted(object state) {
            if ((this.GetCompaniesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompaniesCompleted(this, new GetCompaniesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompaniesAsync() {
            this.GetCompaniesAsync(null);
        }
        
        public void GetCompaniesAsync(object userState) {
            if ((this.onBeginGetCompaniesDelegate == null)) {
                this.onBeginGetCompaniesDelegate = new BeginOperationDelegate(this.OnBeginGetCompanies);
            }
            if ((this.onEndGetCompaniesDelegate == null)) {
                this.onEndGetCompaniesDelegate = new EndOperationDelegate(this.OnEndGetCompanies);
            }
            if ((this.onGetCompaniesCompletedDelegate == null)) {
                this.onGetCompaniesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompaniesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompaniesDelegate, null, this.onEndGetCompaniesDelegate, this.onGetCompaniesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginSaveCompany(openPDCManager.Silverlight.PhasorDataServiceProxy.Company company, bool isNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveCompany(company, isNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndSaveCompany(System.IAsyncResult result) {
            return base.Channel.EndSaveCompany(result);
        }
        
        private System.IAsyncResult OnBeginSaveCompany(object[] inValues, System.AsyncCallback callback, object asyncState) {
            openPDCManager.Silverlight.PhasorDataServiceProxy.Company company = ((openPDCManager.Silverlight.PhasorDataServiceProxy.Company)(inValues[0]));
            bool isNew = ((bool)(inValues[1]));
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginSaveCompany(company, isNew, callback, asyncState);
        }
        
        private object[] OnEndSaveCompany(System.IAsyncResult result) {
            string retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndSaveCompany(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveCompanyCompleted(object state) {
            if ((this.SaveCompanyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveCompanyCompleted(this, new SaveCompanyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveCompanyAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Company company, bool isNew) {
            this.SaveCompanyAsync(company, isNew, null);
        }
        
        public void SaveCompanyAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Company company, bool isNew, object userState) {
            if ((this.onBeginSaveCompanyDelegate == null)) {
                this.onBeginSaveCompanyDelegate = new BeginOperationDelegate(this.OnBeginSaveCompany);
            }
            if ((this.onEndSaveCompanyDelegate == null)) {
                this.onEndSaveCompanyDelegate = new EndOperationDelegate(this.OnEndSaveCompany);
            }
            if ((this.onSaveCompanyCompletedDelegate == null)) {
                this.onSaveCompanyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveCompanyCompleted);
            }
            base.InvokeAsync(this.onBeginSaveCompanyDelegate, new object[] {
                        company,
                        isNew}, this.onEndSaveCompanyDelegate, this.onSaveCompanyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetHistorianList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHistorianList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetHistorianList(System.IAsyncResult result) {
            return base.Channel.EndGetHistorianList(result);
        }
        
        private System.IAsyncResult OnBeginGetHistorianList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetHistorianList(callback, asyncState);
        }
        
        private object[] OnEndGetHistorianList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetHistorianList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHistorianListCompleted(object state) {
            if ((this.GetHistorianListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHistorianListCompleted(this, new GetHistorianListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHistorianListAsync() {
            this.GetHistorianListAsync(null);
        }
        
        public void GetHistorianListAsync(object userState) {
            if ((this.onBeginGetHistorianListDelegate == null)) {
                this.onBeginGetHistorianListDelegate = new BeginOperationDelegate(this.OnBeginGetHistorianList);
            }
            if ((this.onEndGetHistorianListDelegate == null)) {
                this.onEndGetHistorianListDelegate = new EndOperationDelegate(this.OnEndGetHistorianList);
            }
            if ((this.onGetHistorianListCompletedDelegate == null)) {
                this.onGetHistorianListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHistorianListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHistorianListDelegate, null, this.onEndGetHistorianListDelegate, this.onGetHistorianListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetVendorList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVendorList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetVendorList(System.IAsyncResult result) {
            return base.Channel.EndGetVendorList(result);
        }
        
        private System.IAsyncResult OnBeginGetVendorList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetVendorList(callback, asyncState);
        }
        
        private object[] OnEndGetVendorList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetVendorList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVendorListCompleted(object state) {
            if ((this.GetVendorListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVendorListCompleted(this, new GetVendorListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVendorListAsync() {
            this.GetVendorListAsync(null);
        }
        
        public void GetVendorListAsync(object userState) {
            if ((this.onBeginGetVendorListDelegate == null)) {
                this.onBeginGetVendorListDelegate = new BeginOperationDelegate(this.OnBeginGetVendorList);
            }
            if ((this.onEndGetVendorListDelegate == null)) {
                this.onEndGetVendorListDelegate = new EndOperationDelegate(this.OnEndGetVendorList);
            }
            if ((this.onGetVendorListCompletedDelegate == null)) {
                this.onGetVendorListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVendorListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVendorListDelegate, null, this.onEndGetVendorListDelegate, this.onGetVendorListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetVendors(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVendors(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetVendors(System.IAsyncResult result) {
            return base.Channel.EndGetVendors(result);
        }
        
        private System.IAsyncResult OnBeginGetVendors(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetVendors(callback, asyncState);
        }
        
        private object[] OnEndGetVendors(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetVendors(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVendorsCompleted(object state) {
            if ((this.GetVendorsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVendorsCompleted(this, new GetVendorsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVendorsAsync() {
            this.GetVendorsAsync(null);
        }
        
        public void GetVendorsAsync(object userState) {
            if ((this.onBeginGetVendorsDelegate == null)) {
                this.onBeginGetVendorsDelegate = new BeginOperationDelegate(this.OnBeginGetVendors);
            }
            if ((this.onEndGetVendorsDelegate == null)) {
                this.onEndGetVendorsDelegate = new EndOperationDelegate(this.OnEndGetVendors);
            }
            if ((this.onGetVendorsCompletedDelegate == null)) {
                this.onGetVendorsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVendorsCompleted);
            }
            base.InvokeAsync(this.onBeginGetVendorsDelegate, null, this.onEndGetVendorsDelegate, this.onGetVendorsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginSaveVendor(openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor, bool isNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveVendor(vendor, isNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndSaveVendor(System.IAsyncResult result) {
            return base.Channel.EndSaveVendor(result);
        }
        
        private System.IAsyncResult OnBeginSaveVendor(object[] inValues, System.AsyncCallback callback, object asyncState) {
            openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor = ((openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor)(inValues[0]));
            bool isNew = ((bool)(inValues[1]));
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginSaveVendor(vendor, isNew, callback, asyncState);
        }
        
        private object[] OnEndSaveVendor(System.IAsyncResult result) {
            string retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndSaveVendor(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveVendorCompleted(object state) {
            if ((this.SaveVendorCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveVendorCompleted(this, new SaveVendorCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveVendorAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor, bool isNew) {
            this.SaveVendorAsync(vendor, isNew, null);
        }
        
        public void SaveVendorAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor, bool isNew, object userState) {
            if ((this.onBeginSaveVendorDelegate == null)) {
                this.onBeginSaveVendorDelegate = new BeginOperationDelegate(this.OnBeginSaveVendor);
            }
            if ((this.onEndSaveVendorDelegate == null)) {
                this.onEndSaveVendorDelegate = new EndOperationDelegate(this.OnEndSaveVendor);
            }
            if ((this.onSaveVendorCompletedDelegate == null)) {
                this.onSaveVendorCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveVendorCompleted);
            }
            base.InvokeAsync(this.onBeginSaveVendorDelegate, new object[] {
                        vendor,
                        isNew}, this.onEndSaveVendorDelegate, this.onSaveVendorCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetVendorDeviceList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVendorDeviceList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetVendorDeviceList(System.IAsyncResult result) {
            return base.Channel.EndGetVendorDeviceList(result);
        }
        
        private System.IAsyncResult OnBeginGetVendorDeviceList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetVendorDeviceList(callback, asyncState);
        }
        
        private object[] OnEndGetVendorDeviceList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetVendorDeviceList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVendorDeviceListCompleted(object state) {
            if ((this.GetVendorDeviceListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVendorDeviceListCompleted(this, new GetVendorDeviceListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVendorDeviceListAsync() {
            this.GetVendorDeviceListAsync(null);
        }
        
        public void GetVendorDeviceListAsync(object userState) {
            if ((this.onBeginGetVendorDeviceListDelegate == null)) {
                this.onBeginGetVendorDeviceListDelegate = new BeginOperationDelegate(this.OnBeginGetVendorDeviceList);
            }
            if ((this.onEndGetVendorDeviceListDelegate == null)) {
                this.onEndGetVendorDeviceListDelegate = new EndOperationDelegate(this.OnEndGetVendorDeviceList);
            }
            if ((this.onGetVendorDeviceListCompletedDelegate == null)) {
                this.onGetVendorDeviceListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVendorDeviceListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVendorDeviceListDelegate, null, this.onEndGetVendorDeviceListDelegate, this.onGetVendorDeviceListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginSaveVendorDevice(openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice, bool isNew, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSaveVendorDevice(vendorDevice, isNew, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndSaveVendorDevice(System.IAsyncResult result) {
            return base.Channel.EndSaveVendorDevice(result);
        }
        
        private System.IAsyncResult OnBeginSaveVendorDevice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice = ((openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice)(inValues[0]));
            bool isNew = ((bool)(inValues[1]));
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginSaveVendorDevice(vendorDevice, isNew, callback, asyncState);
        }
        
        private object[] OnEndSaveVendorDevice(System.IAsyncResult result) {
            string retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndSaveVendorDevice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSaveVendorDeviceCompleted(object state) {
            if ((this.SaveVendorDeviceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SaveVendorDeviceCompleted(this, new SaveVendorDeviceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SaveVendorDeviceAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice, bool isNew) {
            this.SaveVendorDeviceAsync(vendorDevice, isNew, null);
        }
        
        public void SaveVendorDeviceAsync(openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice, bool isNew, object userState) {
            if ((this.onBeginSaveVendorDeviceDelegate == null)) {
                this.onBeginSaveVendorDeviceDelegate = new BeginOperationDelegate(this.OnBeginSaveVendorDevice);
            }
            if ((this.onEndSaveVendorDeviceDelegate == null)) {
                this.onEndSaveVendorDeviceDelegate = new EndOperationDelegate(this.OnEndSaveVendorDevice);
            }
            if ((this.onSaveVendorDeviceCompletedDelegate == null)) {
                this.onSaveVendorDeviceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSaveVendorDeviceCompleted);
            }
            base.InvokeAsync(this.onBeginSaveVendorDeviceDelegate, new object[] {
                        vendorDevice,
                        isNew}, this.onEndSaveVendorDeviceDelegate, this.onSaveVendorDeviceCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService CreateChannel() {
            return new PhasorDataServiceClientChannel(this);
        }
        
        private class PhasorDataServiceClientChannel : ChannelBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService>, openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService {
            
            public PhasorDataServiceClientChannel(System.ServiceModel.ClientBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetNodeList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetNodeList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> EndGetNodeList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Node>)(base.EndInvoke("GetNodeList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetNodes(bool ActiveOnly, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ActiveOnly;
                System.IAsyncResult _result = base.BeginInvoke("GetNodes", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<System.Guid, string> EndGetNodes(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<System.Guid, string> _result = ((System.Collections.Generic.Dictionary<System.Guid, string>)(base.EndInvoke("GetNodes", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveNode(openPDCManager.Silverlight.PhasorDataServiceProxy.Node node, bool isNew, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = node;
                _args[1] = isNew;
                System.IAsyncResult _result = base.BeginInvoke("SaveNode", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveNode(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveNode", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanyList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompanyList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> EndGetCompanyList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Company>)(base.EndInvoke("GetCompanyList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompanies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetCompanies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetCompanies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveCompany(openPDCManager.Silverlight.PhasorDataServiceProxy.Company company, bool isNew, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = company;
                _args[1] = isNew;
                System.IAsyncResult _result = base.BeginInvoke("SaveCompany", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveCompany(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveCompany", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHistorianList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHistorianList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> EndGetHistorianList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian>)(base.EndInvoke("GetHistorianList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVendorList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVendorList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> EndGetVendorList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor>)(base.EndInvoke("GetVendorList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVendors(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVendors", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetVendors(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetVendors", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveVendor(openPDCManager.Silverlight.PhasorDataServiceProxy.Vendor vendor, bool isNew, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vendor;
                _args[1] = isNew;
                System.IAsyncResult _result = base.BeginInvoke("SaveVendor", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveVendor(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveVendor", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVendorDeviceList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVendorDeviceList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> EndGetVendorDeviceList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice>)(base.EndInvoke("GetVendorDeviceList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSaveVendorDevice(openPDCManager.Silverlight.PhasorDataServiceProxy.VendorDevice vendorDevice, bool isNew, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = vendorDevice;
                _args[1] = isNew;
                System.IAsyncResult _result = base.BeginInvoke("SaveVendorDevice", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSaveVendorDevice(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("SaveVendorDevice", _args, result)));
                return _result;
            }
        }
    }
}
