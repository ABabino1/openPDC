//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 3.0.40624.0
// 
namespace openPDCManager.Silverlight.PhasorDataServiceProxy {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Pdc", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Pdc : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AccessIDField;
        
        private string AcronymField;
        
        private string AdditionalConnectionInfoField;
        
        private string CompanyAcronymField;
        
        private int CompanyIDField;
        
        private string CompanyNameField;
        
        private string ConnectionStringField;
        
        private string EmailListField;
        
        private bool EnabledField;
        
        private int FramesPerSecondField;
        
        private int IDField;
        
        private decimal LatitudeField;
        
        private decimal LongitudeField;
        
        private string NameField;
        
        private string ProtocolAcronymField;
        
        private int ProtocolIDField;
        
        private string ProtocolNameField;
        
        private string TimeOffsetTicksField;
        
        private string TimeZoneField;
        
        private string VendorDeviceDescriptionField;
        
        private int VendorDeviceIDField;
        
        private string VendorDeviceNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccessID {
            get {
                return this.AccessIDField;
            }
            set {
                if ((this.AccessIDField.Equals(value) != true)) {
                    this.AccessIDField = value;
                    this.RaisePropertyChanged("AccessID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AdditionalConnectionInfo {
            get {
                return this.AdditionalConnectionInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.AdditionalConnectionInfoField, value) != true)) {
                    this.AdditionalConnectionInfoField = value;
                    this.RaisePropertyChanged("AdditionalConnectionInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyAcronym {
            get {
                return this.CompanyAcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyAcronymField, value) != true)) {
                    this.CompanyAcronymField = value;
                    this.RaisePropertyChanged("CompanyAcronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EmailList {
            get {
                return this.EmailListField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailListField, value) != true)) {
                    this.EmailListField = value;
                    this.RaisePropertyChanged("EmailList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FramesPerSecond {
            get {
                return this.FramesPerSecondField;
            }
            set {
                if ((this.FramesPerSecondField.Equals(value) != true)) {
                    this.FramesPerSecondField = value;
                    this.RaisePropertyChanged("FramesPerSecond");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolAcronym {
            get {
                return this.ProtocolAcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolAcronymField, value) != true)) {
                    this.ProtocolAcronymField = value;
                    this.RaisePropertyChanged("ProtocolAcronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProtocolID {
            get {
                return this.ProtocolIDField;
            }
            set {
                if ((this.ProtocolIDField.Equals(value) != true)) {
                    this.ProtocolIDField = value;
                    this.RaisePropertyChanged("ProtocolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolName {
            get {
                return this.ProtocolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolNameField, value) != true)) {
                    this.ProtocolNameField = value;
                    this.RaisePropertyChanged("ProtocolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeOffsetTicks {
            get {
                return this.TimeOffsetTicksField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeOffsetTicksField, value) != true)) {
                    this.TimeOffsetTicksField = value;
                    this.RaisePropertyChanged("TimeOffsetTicks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeZone {
            get {
                return this.TimeZoneField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeZoneField, value) != true)) {
                    this.TimeZoneField = value;
                    this.RaisePropertyChanged("TimeZone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDeviceDescription {
            get {
                return this.VendorDeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDeviceDescriptionField, value) != true)) {
                    this.VendorDeviceDescriptionField = value;
                    this.RaisePropertyChanged("VendorDeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VendorDeviceID {
            get {
                return this.VendorDeviceIDField;
            }
            set {
                if ((this.VendorDeviceIDField.Equals(value) != true)) {
                    this.VendorDeviceIDField = value;
                    this.RaisePropertyChanged("VendorDeviceID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VendorDeviceName {
            get {
                return this.VendorDeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VendorDeviceNameField, value) != true)) {
                    this.VendorDeviceNameField = value;
                    this.RaisePropertyChanged("VendorDeviceName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BasicPmuInfo", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.BusinessObjects")]
    public partial class BasicPmuInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private bool ActiveField;
        
        private string CompanyAcronymField;
        
        private string CompanyNameField;
        
        private string DeviceNameField;
        
        private int IDField;
        
        private bool InProgressField;
        
        private decimal LatitudeField;
        
        private decimal LongitudeField;
        
        private string NameField;
        
        private string ProtocolNameField;
        
        private bool ReportingField;
        
        private bool ValidatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Active {
            get {
                return this.ActiveField;
            }
            set {
                if ((this.ActiveField.Equals(value) != true)) {
                    this.ActiveField = value;
                    this.RaisePropertyChanged("Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyAcronym {
            get {
                return this.CompanyAcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyAcronymField, value) != true)) {
                    this.CompanyAcronymField = value;
                    this.RaisePropertyChanged("CompanyAcronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceName {
            get {
                return this.DeviceNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceNameField, value) != true)) {
                    this.DeviceNameField = value;
                    this.RaisePropertyChanged("DeviceName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool InProgress {
            get {
                return this.InProgressField;
            }
            set {
                if ((this.InProgressField.Equals(value) != true)) {
                    this.InProgressField = value;
                    this.RaisePropertyChanged("InProgress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolName {
            get {
                return this.ProtocolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolNameField, value) != true)) {
                    this.ProtocolNameField = value;
                    this.RaisePropertyChanged("ProtocolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reporting {
            get {
                return this.ReportingField;
            }
            set {
                if ((this.ReportingField.Equals(value) != true)) {
                    this.ReportingField = value;
                    this.RaisePropertyChanged("Reporting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Validated {
            get {
                return this.ValidatedField;
            }
            set {
                if ((this.ValidatedField.Equals(value) != true)) {
                    this.ValidatedField = value;
                    this.RaisePropertyChanged("Validated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Historian", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class Historian : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private string AssemblyNameField;
        
        private string ConnectionStringField;
        
        private string DescriptionField;
        
        private bool EnabledField;
        
        private string HistorianLongNameField;
        
        private int IDField;
        
        private string NameField;
        
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HistorianLongName {
            get {
                return this.HistorianLongNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HistorianLongNameField, value) != true)) {
                    this.HistorianLongNameField = value;
                    this.RaisePropertyChanged("HistorianLongName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CalculatedMeasurement", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class CalculatedMeasurement : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AssemblyNameField;
        
        private string ConfigSectionField;
        
        private bool EnabledField;
        
        private int ExpectedFrameRateField;
        
        private int IDField;
        
        private string InputMeasurementsSqlField;
        
        private decimal LagTimeField;
        
        private decimal LeadTimeField;
        
        private int MinimumInputMeasurementsField;
        
        private string NameField;
        
        private string OutputMeasurementsSqlField;
        
        private string TypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AssemblyName {
            get {
                return this.AssemblyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AssemblyNameField, value) != true)) {
                    this.AssemblyNameField = value;
                    this.RaisePropertyChanged("AssemblyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConfigSection {
            get {
                return this.ConfigSectionField;
            }
            set {
                if ((object.ReferenceEquals(this.ConfigSectionField, value) != true)) {
                    this.ConfigSectionField = value;
                    this.RaisePropertyChanged("ConfigSection");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ExpectedFrameRate {
            get {
                return this.ExpectedFrameRateField;
            }
            set {
                if ((this.ExpectedFrameRateField.Equals(value) != true)) {
                    this.ExpectedFrameRateField = value;
                    this.RaisePropertyChanged("ExpectedFrameRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InputMeasurementsSql {
            get {
                return this.InputMeasurementsSqlField;
            }
            set {
                if ((object.ReferenceEquals(this.InputMeasurementsSqlField, value) != true)) {
                    this.InputMeasurementsSqlField = value;
                    this.RaisePropertyChanged("InputMeasurementsSql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LagTime {
            get {
                return this.LagTimeField;
            }
            set {
                if ((this.LagTimeField.Equals(value) != true)) {
                    this.LagTimeField = value;
                    this.RaisePropertyChanged("LagTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MinimumInputMeasurements {
            get {
                return this.MinimumInputMeasurementsField;
            }
            set {
                if ((this.MinimumInputMeasurementsField.Equals(value) != true)) {
                    this.MinimumInputMeasurementsField = value;
                    this.RaisePropertyChanged("MinimumInputMeasurements");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OutputMeasurementsSql {
            get {
                return this.OutputMeasurementsSqlField;
            }
            set {
                if ((object.ReferenceEquals(this.OutputMeasurementsSqlField, value) != true)) {
                    this.OutputMeasurementsSqlField = value;
                    this.RaisePropertyChanged("OutputMeasurementsSql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeName {
            get {
                return this.TypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeNameField, value) != true)) {
                    this.TypeNameField = value;
                    this.RaisePropertyChanged("TypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OutputStream", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.Entities")]
    public partial class OutputStream : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string ConnectionStringField;
        
        private bool EnabledField;
        
        private int FrameRateField;
        
        private int IDField;
        
        private int IDCodeField;
        
        private decimal LagTimeField;
        
        private decimal LeadTimeField;
        
        private string NameField;
        
        private int NominalFrequencyField;
        
        private string PmuFilterSqlField;
        
        private string TypeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ConnectionString {
            get {
                return this.ConnectionStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ConnectionStringField, value) != true)) {
                    this.ConnectionStringField = value;
                    this.RaisePropertyChanged("ConnectionString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Enabled {
            get {
                return this.EnabledField;
            }
            set {
                if ((this.EnabledField.Equals(value) != true)) {
                    this.EnabledField = value;
                    this.RaisePropertyChanged("Enabled");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FrameRate {
            get {
                return this.FrameRateField;
            }
            set {
                if ((this.FrameRateField.Equals(value) != true)) {
                    this.FrameRateField = value;
                    this.RaisePropertyChanged("FrameRate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IDCode {
            get {
                return this.IDCodeField;
            }
            set {
                if ((this.IDCodeField.Equals(value) != true)) {
                    this.IDCodeField = value;
                    this.RaisePropertyChanged("IDCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LagTime {
            get {
                return this.LagTimeField;
            }
            set {
                if ((this.LagTimeField.Equals(value) != true)) {
                    this.LagTimeField = value;
                    this.RaisePropertyChanged("LagTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LeadTime {
            get {
                return this.LeadTimeField;
            }
            set {
                if ((this.LeadTimeField.Equals(value) != true)) {
                    this.LeadTimeField = value;
                    this.RaisePropertyChanged("LeadTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NominalFrequency {
            get {
                return this.NominalFrequencyField;
            }
            set {
                if ((this.NominalFrequencyField.Equals(value) != true)) {
                    this.NominalFrequencyField = value;
                    this.RaisePropertyChanged("NominalFrequency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PmuFilterSql {
            get {
                return this.PmuFilterSqlField;
            }
            set {
                if ((object.ReferenceEquals(this.PmuFilterSqlField, value) != true)) {
                    this.PmuFilterSqlField = value;
                    this.RaisePropertyChanged("PmuFilterSql");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusReport", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.BusinessObjects")]
    public partial class StatusReport : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private string CompanyNameField;
        
        private int IDField;
        
        private System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.PmuStatus> PmusStatusField;
        
        private string StatusField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CompanyName {
            get {
                return this.CompanyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyNameField, value) != true)) {
                    this.CompanyNameField = value;
                    this.RaisePropertyChanged("CompanyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.PmuStatus> PmusStatus {
            get {
                return this.PmusStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.PmusStatusField, value) != true)) {
                    this.PmusStatusField = value;
                    this.RaisePropertyChanged("PmusStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "3.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PmuStatus", Namespace="http://schemas.datacontract.org/2004/07/openPDCManager.Web.Data.BusinessObjects")]
    public partial class PmuStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcronymField;
        
        private int CompanyIDField;
        
        private string DeviceDescriptionField;
        
        private string NameField;
        
        private string ProtocolNameField;
        
        private bool ReportingField;
        
        private string StatusColorField;
        
        private bool ValidatedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Acronym {
            get {
                return this.AcronymField;
            }
            set {
                if ((object.ReferenceEquals(this.AcronymField, value) != true)) {
                    this.AcronymField = value;
                    this.RaisePropertyChanged("Acronym");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CompanyID {
            get {
                return this.CompanyIDField;
            }
            set {
                if ((this.CompanyIDField.Equals(value) != true)) {
                    this.CompanyIDField = value;
                    this.RaisePropertyChanged("CompanyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeviceDescription {
            get {
                return this.DeviceDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DeviceDescriptionField, value) != true)) {
                    this.DeviceDescriptionField = value;
                    this.RaisePropertyChanged("DeviceDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProtocolName {
            get {
                return this.ProtocolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ProtocolNameField, value) != true)) {
                    this.ProtocolNameField = value;
                    this.RaisePropertyChanged("ProtocolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Reporting {
            get {
                return this.ReportingField;
            }
            set {
                if ((this.ReportingField.Equals(value) != true)) {
                    this.ReportingField = value;
                    this.RaisePropertyChanged("Reporting");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusColor {
            get {
                return this.StatusColorField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusColorField, value) != true)) {
                    this.StatusColorField = value;
                    this.RaisePropertyChanged("StatusColor");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Validated {
            get {
                return this.ValidatedField;
            }
            set {
                if ((this.ValidatedField.Equals(value) != true)) {
                    this.ValidatedField = value;
                    this.RaisePropertyChanged("Validated");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PhasorDataServiceProxy.IPhasorDataService")]
    public interface IPhasorDataService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetPdcList", ReplyAction="http://tempuri.org/IPhasorDataService/GetPdcListResponse")]
        System.IAsyncResult BeginGetPdcList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> EndGetPdcList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetValidatedPmuList", ReplyAction="http://tempuri.org/IPhasorDataService/GetValidatedPmuListResponse")]
        System.IAsyncResult BeginGetValidatedPmuList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> EndGetValidatedPmuList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetAllPmuList", ReplyAction="http://tempuri.org/IPhasorDataService/GetAllPmuListResponse")]
        System.IAsyncResult BeginGetAllPmuList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> EndGetAllPmuList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetHistorianList", ReplyAction="http://tempuri.org/IPhasorDataService/GetHistorianListResponse")]
        System.IAsyncResult BeginGetHistorianList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> EndGetHistorianList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetCalculatedMeasurementList", ReplyAction="http://tempuri.org/IPhasorDataService/GetCalculatedMeasurementListResponse")]
        System.IAsyncResult BeginGetCalculatedMeasurementList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> EndGetCalculatedMeasurementList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetOutputStreamList", ReplyAction="http://tempuri.org/IPhasorDataService/GetOutputStreamListResponse")]
        System.IAsyncResult BeginGetOutputStreamList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> EndGetOutputStreamList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetCompanyList", ReplyAction="http://tempuri.org/IPhasorDataService/GetCompanyListResponse")]
        System.IAsyncResult BeginGetCompanyList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetCompanyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetVendorList", ReplyAction="http://tempuri.org/IPhasorDataService/GetVendorListResponse")]
        System.IAsyncResult BeginGetVendorList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetVendorList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetProtocolList", ReplyAction="http://tempuri.org/IPhasorDataService/GetProtocolListResponse")]
        System.IAsyncResult BeginGetProtocolList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, string> EndGetProtocolList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetTransportProtocolList", ReplyAction="http://tempuri.org/IPhasorDataService/GetTransportProtocolListResponse")]
        System.IAsyncResult BeginGetTransportProtocolList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetTransportProtocolList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetParityList", ReplyAction="http://tempuri.org/IPhasorDataService/GetParityListResponse")]
        System.IAsyncResult BeginGetParityList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetParityList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetStopBitList", ReplyAction="http://tempuri.org/IPhasorDataService/GetStopBitListResponse")]
        System.IAsyncResult BeginGetStopBitList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetStopBitList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetTimeZonesList", ReplyAction="http://tempuri.org/IPhasorDataService/GetTimeZonesListResponse")]
        System.IAsyncResult BeginGetTimeZonesList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<string, string> EndGetTimeZonesList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IPhasorDataService/GetStatusReportList", ReplyAction="http://tempuri.org/IPhasorDataService/GetStatusReportListResponse")]
        System.IAsyncResult BeginGetStatusReportList(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> EndGetStatusReportList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface IPhasorDataServiceChannel : openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetPdcListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPdcListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetValidatedPmuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetValidatedPmuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetAllPmuListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAllPmuListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetHistorianListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHistorianListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCalculatedMeasurementListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCalculatedMeasurementListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetOutputStreamListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetOutputStreamListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetCompanyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCompanyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetVendorListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVendorListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetProtocolListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProtocolListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTransportProtocolListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTransportProtocolListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetParityListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetParityListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStopBitListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStopBitListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetTimeZonesListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTimeZonesListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<string, string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<string, string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class GetStatusReportListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStatusReportListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class PhasorDataServiceClient : System.ServiceModel.ClientBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService>, openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService {
        
        private BeginOperationDelegate onBeginGetPdcListDelegate;
        
        private EndOperationDelegate onEndGetPdcListDelegate;
        
        private System.Threading.SendOrPostCallback onGetPdcListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetValidatedPmuListDelegate;
        
        private EndOperationDelegate onEndGetValidatedPmuListDelegate;
        
        private System.Threading.SendOrPostCallback onGetValidatedPmuListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAllPmuListDelegate;
        
        private EndOperationDelegate onEndGetAllPmuListDelegate;
        
        private System.Threading.SendOrPostCallback onGetAllPmuListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHistorianListDelegate;
        
        private EndOperationDelegate onEndGetHistorianListDelegate;
        
        private System.Threading.SendOrPostCallback onGetHistorianListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCalculatedMeasurementListDelegate;
        
        private EndOperationDelegate onEndGetCalculatedMeasurementListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCalculatedMeasurementListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetOutputStreamListDelegate;
        
        private EndOperationDelegate onEndGetOutputStreamListDelegate;
        
        private System.Threading.SendOrPostCallback onGetOutputStreamListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCompanyListDelegate;
        
        private EndOperationDelegate onEndGetCompanyListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCompanyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVendorListDelegate;
        
        private EndOperationDelegate onEndGetVendorListDelegate;
        
        private System.Threading.SendOrPostCallback onGetVendorListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProtocolListDelegate;
        
        private EndOperationDelegate onEndGetProtocolListDelegate;
        
        private System.Threading.SendOrPostCallback onGetProtocolListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTransportProtocolListDelegate;
        
        private EndOperationDelegate onEndGetTransportProtocolListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTransportProtocolListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetParityListDelegate;
        
        private EndOperationDelegate onEndGetParityListDelegate;
        
        private System.Threading.SendOrPostCallback onGetParityListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStopBitListDelegate;
        
        private EndOperationDelegate onEndGetStopBitListDelegate;
        
        private System.Threading.SendOrPostCallback onGetStopBitListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTimeZonesListDelegate;
        
        private EndOperationDelegate onEndGetTimeZonesListDelegate;
        
        private System.Threading.SendOrPostCallback onGetTimeZonesListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStatusReportListDelegate;
        
        private EndOperationDelegate onEndGetStatusReportListDelegate;
        
        private System.Threading.SendOrPostCallback onGetStatusReportListCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public PhasorDataServiceClient() {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhasorDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PhasorDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetPdcListCompletedEventArgs> GetPdcListCompleted;
        
        public event System.EventHandler<GetValidatedPmuListCompletedEventArgs> GetValidatedPmuListCompleted;
        
        public event System.EventHandler<GetAllPmuListCompletedEventArgs> GetAllPmuListCompleted;
        
        public event System.EventHandler<GetHistorianListCompletedEventArgs> GetHistorianListCompleted;
        
        public event System.EventHandler<GetCalculatedMeasurementListCompletedEventArgs> GetCalculatedMeasurementListCompleted;
        
        public event System.EventHandler<GetOutputStreamListCompletedEventArgs> GetOutputStreamListCompleted;
        
        public event System.EventHandler<GetCompanyListCompletedEventArgs> GetCompanyListCompleted;
        
        public event System.EventHandler<GetVendorListCompletedEventArgs> GetVendorListCompleted;
        
        public event System.EventHandler<GetProtocolListCompletedEventArgs> GetProtocolListCompleted;
        
        public event System.EventHandler<GetTransportProtocolListCompletedEventArgs> GetTransportProtocolListCompleted;
        
        public event System.EventHandler<GetParityListCompletedEventArgs> GetParityListCompleted;
        
        public event System.EventHandler<GetStopBitListCompletedEventArgs> GetStopBitListCompleted;
        
        public event System.EventHandler<GetTimeZonesListCompletedEventArgs> GetTimeZonesListCompleted;
        
        public event System.EventHandler<GetStatusReportListCompletedEventArgs> GetStatusReportListCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetPdcList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPdcList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetPdcList(System.IAsyncResult result) {
            return base.Channel.EndGetPdcList(result);
        }
        
        private System.IAsyncResult OnBeginGetPdcList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetPdcList(callback, asyncState);
        }
        
        private object[] OnEndGetPdcList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetPdcList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPdcListCompleted(object state) {
            if ((this.GetPdcListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPdcListCompleted(this, new GetPdcListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPdcListAsync() {
            this.GetPdcListAsync(null);
        }
        
        public void GetPdcListAsync(object userState) {
            if ((this.onBeginGetPdcListDelegate == null)) {
                this.onBeginGetPdcListDelegate = new BeginOperationDelegate(this.OnBeginGetPdcList);
            }
            if ((this.onEndGetPdcListDelegate == null)) {
                this.onEndGetPdcListDelegate = new EndOperationDelegate(this.OnEndGetPdcList);
            }
            if ((this.onGetPdcListCompletedDelegate == null)) {
                this.onGetPdcListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPdcListCompleted);
            }
            base.InvokeAsync(this.onBeginGetPdcListDelegate, null, this.onEndGetPdcListDelegate, this.onGetPdcListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetValidatedPmuList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetValidatedPmuList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetValidatedPmuList(System.IAsyncResult result) {
            return base.Channel.EndGetValidatedPmuList(result);
        }
        
        private System.IAsyncResult OnBeginGetValidatedPmuList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetValidatedPmuList(callback, asyncState);
        }
        
        private object[] OnEndGetValidatedPmuList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetValidatedPmuList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetValidatedPmuListCompleted(object state) {
            if ((this.GetValidatedPmuListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetValidatedPmuListCompleted(this, new GetValidatedPmuListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetValidatedPmuListAsync() {
            this.GetValidatedPmuListAsync(null);
        }
        
        public void GetValidatedPmuListAsync(object userState) {
            if ((this.onBeginGetValidatedPmuListDelegate == null)) {
                this.onBeginGetValidatedPmuListDelegate = new BeginOperationDelegate(this.OnBeginGetValidatedPmuList);
            }
            if ((this.onEndGetValidatedPmuListDelegate == null)) {
                this.onEndGetValidatedPmuListDelegate = new EndOperationDelegate(this.OnEndGetValidatedPmuList);
            }
            if ((this.onGetValidatedPmuListCompletedDelegate == null)) {
                this.onGetValidatedPmuListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetValidatedPmuListCompleted);
            }
            base.InvokeAsync(this.onBeginGetValidatedPmuListDelegate, null, this.onEndGetValidatedPmuListDelegate, this.onGetValidatedPmuListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetAllPmuList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAllPmuList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetAllPmuList(System.IAsyncResult result) {
            return base.Channel.EndGetAllPmuList(result);
        }
        
        private System.IAsyncResult OnBeginGetAllPmuList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetAllPmuList(callback, asyncState);
        }
        
        private object[] OnEndGetAllPmuList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetAllPmuList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAllPmuListCompleted(object state) {
            if ((this.GetAllPmuListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAllPmuListCompleted(this, new GetAllPmuListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAllPmuListAsync() {
            this.GetAllPmuListAsync(null);
        }
        
        public void GetAllPmuListAsync(object userState) {
            if ((this.onBeginGetAllPmuListDelegate == null)) {
                this.onBeginGetAllPmuListDelegate = new BeginOperationDelegate(this.OnBeginGetAllPmuList);
            }
            if ((this.onEndGetAllPmuListDelegate == null)) {
                this.onEndGetAllPmuListDelegate = new EndOperationDelegate(this.OnEndGetAllPmuList);
            }
            if ((this.onGetAllPmuListCompletedDelegate == null)) {
                this.onGetAllPmuListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAllPmuListCompleted);
            }
            base.InvokeAsync(this.onBeginGetAllPmuListDelegate, null, this.onEndGetAllPmuListDelegate, this.onGetAllPmuListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetHistorianList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHistorianList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetHistorianList(System.IAsyncResult result) {
            return base.Channel.EndGetHistorianList(result);
        }
        
        private System.IAsyncResult OnBeginGetHistorianList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetHistorianList(callback, asyncState);
        }
        
        private object[] OnEndGetHistorianList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetHistorianList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHistorianListCompleted(object state) {
            if ((this.GetHistorianListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHistorianListCompleted(this, new GetHistorianListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHistorianListAsync() {
            this.GetHistorianListAsync(null);
        }
        
        public void GetHistorianListAsync(object userState) {
            if ((this.onBeginGetHistorianListDelegate == null)) {
                this.onBeginGetHistorianListDelegate = new BeginOperationDelegate(this.OnBeginGetHistorianList);
            }
            if ((this.onEndGetHistorianListDelegate == null)) {
                this.onEndGetHistorianListDelegate = new EndOperationDelegate(this.OnEndGetHistorianList);
            }
            if ((this.onGetHistorianListCompletedDelegate == null)) {
                this.onGetHistorianListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHistorianListCompleted);
            }
            base.InvokeAsync(this.onBeginGetHistorianListDelegate, null, this.onEndGetHistorianListDelegate, this.onGetHistorianListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetCalculatedMeasurementList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCalculatedMeasurementList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetCalculatedMeasurementList(System.IAsyncResult result) {
            return base.Channel.EndGetCalculatedMeasurementList(result);
        }
        
        private System.IAsyncResult OnBeginGetCalculatedMeasurementList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetCalculatedMeasurementList(callback, asyncState);
        }
        
        private object[] OnEndGetCalculatedMeasurementList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetCalculatedMeasurementList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCalculatedMeasurementListCompleted(object state) {
            if ((this.GetCalculatedMeasurementListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCalculatedMeasurementListCompleted(this, new GetCalculatedMeasurementListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCalculatedMeasurementListAsync() {
            this.GetCalculatedMeasurementListAsync(null);
        }
        
        public void GetCalculatedMeasurementListAsync(object userState) {
            if ((this.onBeginGetCalculatedMeasurementListDelegate == null)) {
                this.onBeginGetCalculatedMeasurementListDelegate = new BeginOperationDelegate(this.OnBeginGetCalculatedMeasurementList);
            }
            if ((this.onEndGetCalculatedMeasurementListDelegate == null)) {
                this.onEndGetCalculatedMeasurementListDelegate = new EndOperationDelegate(this.OnEndGetCalculatedMeasurementList);
            }
            if ((this.onGetCalculatedMeasurementListCompletedDelegate == null)) {
                this.onGetCalculatedMeasurementListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCalculatedMeasurementListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCalculatedMeasurementListDelegate, null, this.onEndGetCalculatedMeasurementListDelegate, this.onGetCalculatedMeasurementListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetOutputStreamList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetOutputStreamList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetOutputStreamList(System.IAsyncResult result) {
            return base.Channel.EndGetOutputStreamList(result);
        }
        
        private System.IAsyncResult OnBeginGetOutputStreamList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetOutputStreamList(callback, asyncState);
        }
        
        private object[] OnEndGetOutputStreamList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetOutputStreamList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetOutputStreamListCompleted(object state) {
            if ((this.GetOutputStreamListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetOutputStreamListCompleted(this, new GetOutputStreamListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetOutputStreamListAsync() {
            this.GetOutputStreamListAsync(null);
        }
        
        public void GetOutputStreamListAsync(object userState) {
            if ((this.onBeginGetOutputStreamListDelegate == null)) {
                this.onBeginGetOutputStreamListDelegate = new BeginOperationDelegate(this.OnBeginGetOutputStreamList);
            }
            if ((this.onEndGetOutputStreamListDelegate == null)) {
                this.onEndGetOutputStreamListDelegate = new EndOperationDelegate(this.OnEndGetOutputStreamList);
            }
            if ((this.onGetOutputStreamListCompletedDelegate == null)) {
                this.onGetOutputStreamListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetOutputStreamListCompleted);
            }
            base.InvokeAsync(this.onBeginGetOutputStreamListDelegate, null, this.onEndGetOutputStreamListDelegate, this.onGetOutputStreamListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetCompanyList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCompanyList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetCompanyList(System.IAsyncResult result) {
            return base.Channel.EndGetCompanyList(result);
        }
        
        private System.IAsyncResult OnBeginGetCompanyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetCompanyList(callback, asyncState);
        }
        
        private object[] OnEndGetCompanyList(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetCompanyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCompanyListCompleted(object state) {
            if ((this.GetCompanyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCompanyListCompleted(this, new GetCompanyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCompanyListAsync() {
            this.GetCompanyListAsync(null);
        }
        
        public void GetCompanyListAsync(object userState) {
            if ((this.onBeginGetCompanyListDelegate == null)) {
                this.onBeginGetCompanyListDelegate = new BeginOperationDelegate(this.OnBeginGetCompanyList);
            }
            if ((this.onEndGetCompanyListDelegate == null)) {
                this.onEndGetCompanyListDelegate = new EndOperationDelegate(this.OnEndGetCompanyList);
            }
            if ((this.onGetCompanyListCompletedDelegate == null)) {
                this.onGetCompanyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCompanyListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCompanyListDelegate, null, this.onEndGetCompanyListDelegate, this.onGetCompanyListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetVendorList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVendorList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetVendorList(System.IAsyncResult result) {
            return base.Channel.EndGetVendorList(result);
        }
        
        private System.IAsyncResult OnBeginGetVendorList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetVendorList(callback, asyncState);
        }
        
        private object[] OnEndGetVendorList(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetVendorList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVendorListCompleted(object state) {
            if ((this.GetVendorListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVendorListCompleted(this, new GetVendorListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVendorListAsync() {
            this.GetVendorListAsync(null);
        }
        
        public void GetVendorListAsync(object userState) {
            if ((this.onBeginGetVendorListDelegate == null)) {
                this.onBeginGetVendorListDelegate = new BeginOperationDelegate(this.OnBeginGetVendorList);
            }
            if ((this.onEndGetVendorListDelegate == null)) {
                this.onEndGetVendorListDelegate = new EndOperationDelegate(this.OnEndGetVendorList);
            }
            if ((this.onGetVendorListCompletedDelegate == null)) {
                this.onGetVendorListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVendorListCompleted);
            }
            base.InvokeAsync(this.onBeginGetVendorListDelegate, null, this.onEndGetVendorListDelegate, this.onGetVendorListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetProtocolList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProtocolList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetProtocolList(System.IAsyncResult result) {
            return base.Channel.EndGetProtocolList(result);
        }
        
        private System.IAsyncResult OnBeginGetProtocolList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetProtocolList(callback, asyncState);
        }
        
        private object[] OnEndGetProtocolList(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetProtocolList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProtocolListCompleted(object state) {
            if ((this.GetProtocolListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProtocolListCompleted(this, new GetProtocolListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProtocolListAsync() {
            this.GetProtocolListAsync(null);
        }
        
        public void GetProtocolListAsync(object userState) {
            if ((this.onBeginGetProtocolListDelegate == null)) {
                this.onBeginGetProtocolListDelegate = new BeginOperationDelegate(this.OnBeginGetProtocolList);
            }
            if ((this.onEndGetProtocolListDelegate == null)) {
                this.onEndGetProtocolListDelegate = new EndOperationDelegate(this.OnEndGetProtocolList);
            }
            if ((this.onGetProtocolListCompletedDelegate == null)) {
                this.onGetProtocolListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProtocolListCompleted);
            }
            base.InvokeAsync(this.onBeginGetProtocolListDelegate, null, this.onEndGetProtocolListDelegate, this.onGetProtocolListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetTransportProtocolList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTransportProtocolList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetTransportProtocolList(System.IAsyncResult result) {
            return base.Channel.EndGetTransportProtocolList(result);
        }
        
        private System.IAsyncResult OnBeginGetTransportProtocolList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetTransportProtocolList(callback, asyncState);
        }
        
        private object[] OnEndGetTransportProtocolList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetTransportProtocolList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTransportProtocolListCompleted(object state) {
            if ((this.GetTransportProtocolListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTransportProtocolListCompleted(this, new GetTransportProtocolListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTransportProtocolListAsync() {
            this.GetTransportProtocolListAsync(null);
        }
        
        public void GetTransportProtocolListAsync(object userState) {
            if ((this.onBeginGetTransportProtocolListDelegate == null)) {
                this.onBeginGetTransportProtocolListDelegate = new BeginOperationDelegate(this.OnBeginGetTransportProtocolList);
            }
            if ((this.onEndGetTransportProtocolListDelegate == null)) {
                this.onEndGetTransportProtocolListDelegate = new EndOperationDelegate(this.OnEndGetTransportProtocolList);
            }
            if ((this.onGetTransportProtocolListCompletedDelegate == null)) {
                this.onGetTransportProtocolListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTransportProtocolListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTransportProtocolListDelegate, null, this.onEndGetTransportProtocolListDelegate, this.onGetTransportProtocolListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetParityList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetParityList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetParityList(System.IAsyncResult result) {
            return base.Channel.EndGetParityList(result);
        }
        
        private System.IAsyncResult OnBeginGetParityList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetParityList(callback, asyncState);
        }
        
        private object[] OnEndGetParityList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetParityList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetParityListCompleted(object state) {
            if ((this.GetParityListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetParityListCompleted(this, new GetParityListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetParityListAsync() {
            this.GetParityListAsync(null);
        }
        
        public void GetParityListAsync(object userState) {
            if ((this.onBeginGetParityListDelegate == null)) {
                this.onBeginGetParityListDelegate = new BeginOperationDelegate(this.OnBeginGetParityList);
            }
            if ((this.onEndGetParityListDelegate == null)) {
                this.onEndGetParityListDelegate = new EndOperationDelegate(this.OnEndGetParityList);
            }
            if ((this.onGetParityListCompletedDelegate == null)) {
                this.onGetParityListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetParityListCompleted);
            }
            base.InvokeAsync(this.onBeginGetParityListDelegate, null, this.onEndGetParityListDelegate, this.onGetParityListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetStopBitList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStopBitList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetStopBitList(System.IAsyncResult result) {
            return base.Channel.EndGetStopBitList(result);
        }
        
        private System.IAsyncResult OnBeginGetStopBitList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetStopBitList(callback, asyncState);
        }
        
        private object[] OnEndGetStopBitList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetStopBitList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStopBitListCompleted(object state) {
            if ((this.GetStopBitListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStopBitListCompleted(this, new GetStopBitListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStopBitListAsync() {
            this.GetStopBitListAsync(null);
        }
        
        public void GetStopBitListAsync(object userState) {
            if ((this.onBeginGetStopBitListDelegate == null)) {
                this.onBeginGetStopBitListDelegate = new BeginOperationDelegate(this.OnBeginGetStopBitList);
            }
            if ((this.onEndGetStopBitListDelegate == null)) {
                this.onEndGetStopBitListDelegate = new EndOperationDelegate(this.OnEndGetStopBitList);
            }
            if ((this.onGetStopBitListCompletedDelegate == null)) {
                this.onGetStopBitListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStopBitListCompleted);
            }
            base.InvokeAsync(this.onBeginGetStopBitListDelegate, null, this.onEndGetStopBitListDelegate, this.onGetStopBitListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetTimeZonesList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTimeZonesList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<string, string> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetTimeZonesList(System.IAsyncResult result) {
            return base.Channel.EndGetTimeZonesList(result);
        }
        
        private System.IAsyncResult OnBeginGetTimeZonesList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetTimeZonesList(callback, asyncState);
        }
        
        private object[] OnEndGetTimeZonesList(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<string, string> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetTimeZonesList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTimeZonesListCompleted(object state) {
            if ((this.GetTimeZonesListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTimeZonesListCompleted(this, new GetTimeZonesListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTimeZonesListAsync() {
            this.GetTimeZonesListAsync(null);
        }
        
        public void GetTimeZonesListAsync(object userState) {
            if ((this.onBeginGetTimeZonesListDelegate == null)) {
                this.onBeginGetTimeZonesListDelegate = new BeginOperationDelegate(this.OnBeginGetTimeZonesList);
            }
            if ((this.onEndGetTimeZonesListDelegate == null)) {
                this.onEndGetTimeZonesListDelegate = new EndOperationDelegate(this.OnEndGetTimeZonesList);
            }
            if ((this.onGetTimeZonesListCompletedDelegate == null)) {
                this.onGetTimeZonesListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTimeZonesListCompleted);
            }
            base.InvokeAsync(this.onBeginGetTimeZonesListDelegate, null, this.onEndGetTimeZonesListDelegate, this.onGetTimeZonesListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.BeginGetStatusReportList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStatusReportList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService.EndGetStatusReportList(System.IAsyncResult result) {
            return base.Channel.EndGetStatusReportList(result);
        }
        
        private System.IAsyncResult OnBeginGetStatusReportList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).BeginGetStatusReportList(callback, asyncState);
        }
        
        private object[] OnEndGetStatusReportList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> retVal = ((openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService)(this)).EndGetStatusReportList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStatusReportListCompleted(object state) {
            if ((this.GetStatusReportListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStatusReportListCompleted(this, new GetStatusReportListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStatusReportListAsync() {
            this.GetStatusReportListAsync(null);
        }
        
        public void GetStatusReportListAsync(object userState) {
            if ((this.onBeginGetStatusReportListDelegate == null)) {
                this.onBeginGetStatusReportListDelegate = new BeginOperationDelegate(this.OnBeginGetStatusReportList);
            }
            if ((this.onEndGetStatusReportListDelegate == null)) {
                this.onEndGetStatusReportListDelegate = new EndOperationDelegate(this.OnEndGetStatusReportList);
            }
            if ((this.onGetStatusReportListCompletedDelegate == null)) {
                this.onGetStatusReportListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStatusReportListCompleted);
            }
            base.InvokeAsync(this.onBeginGetStatusReportListDelegate, null, this.onEndGetStatusReportListDelegate, this.onGetStatusReportListCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService CreateChannel() {
            return new PhasorDataServiceClientChannel(this);
        }
        
        private class PhasorDataServiceClientChannel : ChannelBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService>, openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService {
            
            public PhasorDataServiceClientChannel(System.ServiceModel.ClientBase<openPDCManager.Silverlight.PhasorDataServiceProxy.IPhasorDataService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetPdcList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetPdcList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> EndGetPdcList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Pdc>)(base.EndInvoke("GetPdcList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetValidatedPmuList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetValidatedPmuList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> EndGetValidatedPmuList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo>)(base.EndInvoke("GetValidatedPmuList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAllPmuList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAllPmuList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> EndGetAllPmuList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.BasicPmuInfo>)(base.EndInvoke("GetAllPmuList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetHistorianList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetHistorianList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> EndGetHistorianList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.Historian>)(base.EndInvoke("GetHistorianList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCalculatedMeasurementList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCalculatedMeasurementList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> EndGetCalculatedMeasurementList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.CalculatedMeasurement>)(base.EndInvoke("GetCalculatedMeasurementList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetOutputStreamList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetOutputStreamList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> EndGetOutputStreamList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.OutputStream>)(base.EndInvoke("GetOutputStreamList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetCompanyList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetCompanyList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetCompanyList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetCompanyList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetVendorList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetVendorList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetVendorList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetVendorList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProtocolList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetProtocolList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, string> EndGetProtocolList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, string> _result = ((System.Collections.Generic.Dictionary<int, string>)(base.EndInvoke("GetProtocolList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTransportProtocolList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTransportProtocolList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetTransportProtocolList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetTransportProtocolList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetParityList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetParityList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetParityList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetParityList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStopBitList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStopBitList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetStopBitList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetStopBitList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTimeZonesList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetTimeZonesList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<string, string> EndGetTimeZonesList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<string, string> _result = ((System.Collections.Generic.Dictionary<string, string>)(base.EndInvoke("GetTimeZonesList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStatusReportList(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStatusReportList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> EndGetStatusReportList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport> _result = ((System.Collections.ObjectModel.ObservableCollection<openPDCManager.Silverlight.PhasorDataServiceProxy.StatusReport>)(base.EndInvoke("GetStatusReportList", _args, result)));
                return _result;
            }
        }
    }
}
